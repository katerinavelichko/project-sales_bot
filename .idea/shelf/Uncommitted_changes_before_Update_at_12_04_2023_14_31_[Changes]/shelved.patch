Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import telebot\r\nfrom telebot import types\r\nfrom telebot.types import BotCommand\r\nimport sqlite3\r\n\r\nbot = telebot.TeleBot('5844570225:AAHVbCClhE53DdtM-RpZ1vKjrPPB4j_I538', 'markdown')\r\ncon = sqlite3.connect(\"server.db\", check_same_thread=False)\r\ncur = con.cursor()\r\nconn = sqlite3.connect('users.db', check_same_thread=False)\r\ncursor = conn.cursor()\r\n\r\n\r\ndef set_main_menu():\r\n    main_menu_commands = [\r\n        BotCommand(command='/start',\r\n                   description='Запуск бота'),\r\n        BotCommand(command='/help',\r\n                   description='Помощь'),\r\n        BotCommand(command='/addtest',\r\n                   description='Добавить тест')]\r\n\r\n    bot.set_my_commands(main_menu_commands)\r\n\r\n\r\ndef db_table_val(user_id: int, user_name: str, user_status: str, username: str):\r\n    cursor.execute('INSERT INTO users (user_id, user_name, user_status, username) VALUES (?, ?, ?, ?)',\r\n                   (user_id, user_name, user_status, username))\r\n    conn.commit()\r\n\r\n\r\nglobal conclusion\r\nconclusion = []\r\n\r\ntest_id = 2\r\nb2b_or_b2c = 0\r\n\r\n\r\n@bot.message_handler(content_types=['text'])\r\ndef get_text_messages(message):\r\n    global test_id, b2b_or_b2c\r\n    sms2 = 'Вы можете выбрать один из 4 вариантов: '\r\n    if message.text == \"/start\":\r\n        keyboard = types.InlineKeyboardMarkup()\r\n        key_manager = types.InlineKeyboardButton(text='Менеджер', callback_data=\"manager\")\r\n        keyboard.add(key_manager)\r\n        key_boss = types.InlineKeyboardButton(text='Управляющий', callback_data=\"boss\")\r\n        keyboard.add(key_boss)\r\n        bot.send_message(message.from_user.id, 'Выберите вашу роль', reply_markup=keyboard)\r\n    elif message.text == \"/help\":\r\n        bot.send_message(message.from_user.id, \"Напишите /start\")\r\n    elif message.text == \"Привет\":\r\n        bot.send_message(message.from_user.id, \"Здравствуйте! Напишите /help\")\r\n    elif message.text.lower() == 'добавить тест' or message.text.lower() == '/addtest':\r\n        send = bot.send_message(message.chat.id,\r\n                                'Создайте пароль для доступа к вашему тесту, он может состоять только цифр')\r\n        bot.register_next_step_handler(send, ask_key_word)\r\n    elif message.text == \"Следующий вопрос\":\r\n        if b2b_or_b2c == 1:\r\n            for value in cur.execute(\"SELECT * FROM entrance_test_b2b WHERE id=?\", (test_id,)):\r\n                answers = [value[2], value[3], value[4]]\r\n                bot.send_poll(chat_id=message.chat.id, question=value[1], options=answers, type='quiz',\r\n                              correct_option_id=value[5], explanation='мы молодцы', open_period=30)\r\n                test_id += 1\r\n                if test_id == 29:\r\n                    bot.send_message(message.from_user.id, 'Входной тест завершён.',\r\n                                     reply_markup=types.ReplyKeyboardRemove())\r\n                    keyboard = types.InlineKeyboardMarkup()\r\n                    key_loyal = types.InlineKeyboardButton(text='Лояльный', callback_data='loyal_client')\r\n                    key_new = types.InlineKeyboardButton(text='Новый', callback_data='new_client')\r\n                    key_negative = types.InlineKeyboardButton(text='Негативный', callback_data='negative_client')\r\n                    key_doubting = types.InlineKeyboardButton(text='Сомневающийся', callback_data='doubting_client')\r\n                    keyboard.add(key_loyal)\r\n                    keyboard.add(key_new)\r\n                    keyboard.add(key_negative)\r\n                    keyboard.add(key_doubting)\r\n                    bot.send_message(message.chat.id, sms2, reply_markup=keyboard)\r\n        else:\r\n            for value in cur.execute(\"SELECT * FROM entrance_test_b2c WHERE id=?\", (test_id,)):\r\n                answers = [value[2], value[3], value[4]]\r\n                bot.send_poll(chat_id=message.chat.id, question=value[1], options=answers, type='quiz',\r\n                              correct_option_id=value[5], explanation='мы молодцы', open_period=30)\r\n                test_id += 1\r\n                if test_id == 25:\r\n                    bot.send_message(message.from_user.id, 'Входной тест завершён.',\r\n                                     reply_markup=types.ReplyKeyboardRemove())\r\n                    keyboard = types.InlineKeyboardMarkup()\r\n                    key_loyal = types.InlineKeyboardButton(text='Лояльный', callback_data='loyal_client')\r\n                    key_new = types.InlineKeyboardButton(text='Новый', callback_data='new_client')\r\n                    key_negative = types.InlineKeyboardButton(text='Негативный', callback_data='negative_client')\r\n                    key_doubting = types.InlineKeyboardButton(text='Сомневающийся', callback_data='doubting_client')\r\n                    keyboard.add(key_loyal)\r\n                    keyboard.add(key_new)\r\n                    keyboard.add(key_negative)\r\n                    keyboard.add(key_doubting)\r\n                    bot.send_message(message.chat.id, sms2, reply_markup=keyboard)\r\n\r\n    else:\r\n        bot.send_message(message.from_user.id, \"Я вас не понимаю. Напишите /help.\")\r\n\r\n\r\n@bot.callback_query_handler(func=lambda call: True)\r\ndef callback_worker(call):\r\n    global b2b_or_b2c\r\n    if call.data == \"manager\" or \"boss\":\r\n        if call.data == \"manager\":\r\n            bot.send_message(call.from_user.id, \"Вам предстоит выбрать тип продаж. \")\r\n            b2b_msg = \"B2B (Business to Business) – модель, когда клиенты компании – это другие фирмы или предприниматели.\"\r\n            bot.send_message(call.from_user.id, b2b_msg)\r\n            keyboard = types.InlineKeyboardMarkup()\r\n            key_b2b = types.InlineKeyboardButton(text='B2B', callback_data=\"typeofclientb\")\r\n            keyboard.add(key_b2b)\r\n            key_b2c = types.InlineKeyboardButton(text='B2C', callback_data=\"typeofclientc\")\r\n            keyboard.add(key_b2c)\r\n            b2c_msg = \"B2C(Business to Consumer) предполагает продажу товаров,услуг физическим лицам/конечным потребителям.\"\r\n            bot.send_message(call.from_user.id, b2c_msg, reply_markup=keyboard)\r\n        elif call.data == \"boss\":\r\n            bot.send_message(call.message.chat.id, 'Вы можете создать свой тест')\r\n        user_to = call.from_user.id\r\n        info_user_to = cursor.execute(\"SELECT * FROM users WHERE user_id = \" + str(user_to)).fetchall()\r\n        if len(info_user_to) > 0:\r\n            pass\r\n        else:\r\n            us_id = call.from_user.id\r\n            us_name = call.from_user.first_name\r\n            if call.data == \"manager\":\r\n                status = \"manager\"\r\n            else:\r\n                status = \"boss\"\r\n            username = call.from_user.username\r\n            db_table_val(user_id=us_id, user_name=us_name, user_status=status, username=username)\r\n    if call.data == \"typeofclientb\" or call.data == \"typeofclientc\":\r\n        if call.data == \"typeofclientb\" or call.data == \"typeofclientc\":\r\n            if call.data == \"typeofclientb\":\r\n                b2b_or_b2c = 1\r\n                sms1 = 'Отлично! Вы выбрали продажи компании/магазину. Пожалуйста пройдите тест для определения уровня.'\r\n                conclusion.append('b2b')\r\n                bot.send_message(call.message.chat.id, sms1)\r\n                for value in cur.execute(\"SELECT * FROM entrance_test_b2b\"):\r\n                    answers = [value[2], value[3], value[4]]\r\n                    bot.send_poll(chat_id=call.message.chat.id, question=value[1], options=answers, type='quiz',\r\n                                  correct_option_id=value[5], explanation='мы молодцы', open_period=30)\r\n                    break\r\n                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)\r\n                button_next_question = types.KeyboardButton('Следующий вопрос')\r\n                markup.row(button_next_question)\r\n                bot.send_message(call.message.chat.id,\r\n                                 'Когда будете готовы перейти к следующему вопросу, нажмите кнопку \"Следующий вопрос\" ',\r\n                                 reply_markup=markup)\r\n            else:\r\n                sms1 = 'Отлично! Вы выбрали продажи частному лицу. Пожалуйста пройдите тест для определения уровня.'\r\n                conclusion.append('b2c')\r\n                bot.send_message(call.message.chat.id, sms1)\r\n                for value in cur.execute(\"SELECT * FROM entrance_test_b2c\"):\r\n                    q = value[1]\r\n                    ans_1 = value[2]\r\n                    ans_2 = value[3]\r\n                    ans_3 = value[4]\r\n                    answers = [ans_1, ans_2, ans_3]\r\n                    bot.send_poll(chat_id=call.message.chat.id, question=q, options=answers, type='quiz',\r\n                                  correct_option_id=value[5], explanation='мы молодцы', open_period=30)\r\n                    break\r\n                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)\r\n                button_next_question = types.KeyboardButton('Следующий вопрос')\r\n                markup.row(button_next_question)\r\n                bot.send_message(call.message.chat.id,\r\n                                 'Когда будете готовы перейти к следующему вопросу, нажмите кнопку \"Следующий вопрос\" ',\r\n                                 reply_markup=markup)\r\n    elif call.data == 'loyal_client' or call.data == 'new_client' or call.data == 'negative_client' or call.data == 'doubting_client':\r\n        if call.data == 'loyal_client':\r\n            conclusion.append('loyal')\r\n        elif call.data == 'new_client':\r\n            conclusion.append('new')\r\n        elif call.data == 'negative_client':\r\n            conclusion.append('negative')\r\n        elif call.data == 'doubting_client':\r\n            conclusion.append('doubting')\r\n        sms3 = 'Давайте выберем форму коммуникации'\r\n        keyboard = types.InlineKeyboardMarkup()\r\n        key_phone = types.InlineKeyboardButton(text='Телефон', callback_data='phone_communication')\r\n        key_meet = types.InlineKeyboardButton(text='Личная встреча', callback_data='meet_communication')\r\n        key_message = types.InlineKeyboardButton(text='Переписка', callback_data='message_communication')\r\n        keyboard.add(key_phone)\r\n        keyboard.add(key_meet)\r\n        keyboard.add(key_message)\r\n        bot.send_message(call.message.chat.id, sms3, reply_markup=keyboard)\r\n    elif call.data == 'phone_communication' or call.data == 'meet_communication' or call.data == 'message_communication':\r\n        if call.data == 'phone_communication':\r\n            conclusion.append('phone')\r\n        elif call.data == 'meet_communication':\r\n            conclusion.append('meet')\r\n        elif call.data == 'message_communication':\r\n            conclusion.append('message')\r\n        sms4 = 'Осталось выбрать уровень'\r\n        keyboard = types.InlineKeyboardMarkup()\r\n        key_level1 = types.InlineKeyboardButton(text='Новичок', callback_data='level1')\r\n        key_level2 = types.InlineKeyboardButton(text='Продвинутый', callback_data='level2')\r\n        key_level3 = types.InlineKeyboardButton(text='Эксперт', callback_data='level3')\r\n        keyboard.add(key_level1)\r\n        keyboard.add(key_level2)\r\n        keyboard.add(key_level3)\r\n        bot.send_message(call.message.chat.id, sms4, reply_markup=keyboard)\r\n    elif call.data == 'level1' or call.data == 'level2' or call.data == 'level3':\r\n        sms5 = 'Поздравляю! Вы готовы проходить тест. Он будет сгенеривован нашей системой.'\r\n        bot.send_message(call.message.chat.id, sms5)\r\n\r\n\r\nglobal current_state\r\ncurrent_state = []\r\nkey_word = {}\r\n\r\n\r\n@bot.message_handler()\r\ndef ask_key_word(message):\r\n    msg = message.text\r\n    msg = \"'\" + msg + \"'\"\r\n    info_msg = cursor.execute(\"SELECT * FROM testbase WHERE test_id =\" + str(msg)).fetchall()\r\n    user_to = message.from_user.id\r\n    key_word[user_to] = []\r\n    key_word[user_to].append(msg)\r\n    key_word[user_to].append(info_msg)\r\n    while len(info_msg) > 0:\r\n        current_state.append('receiving')\r\n        send = bot.send_message(message.chat.id, 'Такой  пароль для доступа уже существует, придумайте новый')\r\n        bot.register_next_step_handler(send, make_key_word)\r\n        while (current_state[-1] != 'answering'):\r\n            current_state_str = 'receiving'\r\n            if current_state[-1] == 'answering':\r\n                break\r\n        info_msg = key_word[user_to][1]\r\n    send = bot.send_message(message.chat.id, 'Ваш пароль успешно добавлен. Введите количество вопросов')\r\n    bot.register_next_step_handler(send, numbers)\r\n\r\n\r\ndef make_key_word(message):\r\n    msg = message.text\r\n    user_to = message.from_user.id\r\n    msg = \"'\" + msg + \"'\"\r\n    info_msg = cursor.execute(\"SELECT * FROM testbase WHERE test_id = \" + str(msg)).fetchall()\r\n    if len(info_msg) == 0:\r\n        key_word[user_to][0] = msg\r\n    key_word[user_to].append(info_msg)\r\n    current_state.append('answering')\r\n\r\n\r\n@bot.message_handler()\r\ndef numbers(message):\r\n    global i\r\n    global j\r\n    i = 0\r\n    amount = message.text.split()[0]\r\n    while (amount.isdigit() == False):\r\n        current_state.append('receiving')\r\n        send = bot.send_message(message.chat.id, 'Введите число, а не текст')\r\n        bot.register_next_step_handler(send, read_number)\r\n        while (current_state[-1] != 'answering'):\r\n            current_state_str = 'receiving'\r\n            if current_state[-1] == 'answering':\r\n                break\r\n        amount = current_state[-2]\r\n    while (i != int(amount)):\r\n        current_state.append('receiving')\r\n        send = bot.send_message(message.chat.id, f'Введите {i + 1}-й вопрос')\r\n        bot.register_next_step_handler(send, questions)\r\n        while (current_state[-1] != 'answering'):\r\n            current_state_str = 'receiving'\r\n            if current_state[-1] == 'answering':\r\n                break\r\n        j = 0\r\n        while (j != 4):\r\n            current_state.append('receiving')\r\n            send = bot.send_message(message.chat.id, f'Введите {j + 1}-й вариант ответа')\r\n            bot.register_next_step_handler(send, answers)\r\n            while (current_state[-1] != 'answering'):\r\n                current_state_str = 'receiving'\r\n                if current_state[-1] == 'answering':\r\n                    break\r\n            j += 1\r\n        current_state.append('receiving')\r\n        send = bot.send_message(message.chat.id, f'Введите номер правильного ответа')\r\n        bot.register_next_step_handler(send, answers)\r\n        while (current_state[-1] != 'answering'):\r\n            current_state_str = 'receiving'\r\n            if current_state[-1] == 'answering':\r\n                break\r\n        i += 1\r\n    current_state.clear()\r\n\r\n\r\ndef read_number(message):\r\n    amount = message.text\r\n    if amount.isdigit() == True:\r\n        current_state.append(amount)\r\n    current_state.append('answering')\r\n\r\n\r\ndef questions(message):\r\n    last = message.text\r\n    user_to = message.from_user.id\r\n    user_to = key_word[user_to][0]\r\n    user_to = int(user_to[1:-1])\r\n    add_question(i + 1, last, user_to)\r\n    current_state.append('answering')\r\n\r\n\r\ndef answers(message):\r\n    ans = message.text\r\n    user_to = message.from_user.id\r\n    user_to = key_word[user_to][0]\r\n    user_to = int(user_to[1:-1])\r\n    add_ans(ans, user_to, i + 1, j + 1)\r\n    current_state.append('answering')\r\n\r\n\r\ndef add_test(question_number, question, ans_1, ans_2, ans_3, ans_4, right_ans, test_id):\r\n    cursor.execute(\r\n        'INSERT INTO testbase (question_number, question, ans_1 ,ans_2 ,ans_3,ans_4, right_ans, test_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)',\r\n        (question_number, question, ans_1, ans_2, ans_3, ans_4, right_ans, test_id))\r\n    conn.commit()\r\n\r\n\r\ndef add_question(question_number, question, test_id):\r\n    cursor.execute(\r\n        'INSERT INTO testbase (question_number,question, test_id) VALUES (?,?, ?)',\r\n        (question_number, question, test_id))\r\n    conn.commit()\r\n\r\n\r\ndef add_ans(ans, test_id, question_number, j_t):\r\n    if (j_t != 5):\r\n        answer = 'ans_'\r\n        answer += str(j_t)\r\n    else:\r\n        answer = 'right_ans'\r\n    string = 'UPDATE testbase SET ' + answer + '= ? WHERE test_id=? and question_number=?'\r\n    cursor.execute(\r\n        string,\r\n        (ans, test_id, question_number))\r\n    conn.commit()\r\n\r\n\r\nif __name__ == '__main__':\r\n    set_main_menu()\r\n    bot.polling(none_stop=True, interval=0)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 4e42e67f718ead6ccb95cd7e9031bcaa676174db)
+++ b/main.py	(date 1681299048049)
@@ -58,7 +58,7 @@
         if b2b_or_b2c == 1:
             for value in cur.execute("SELECT * FROM entrance_test_b2b WHERE id=?", (test_id,)):
                 answers = [value[2], value[3], value[4]]
-                bot.send_poll(chat_id=message.chat.id, question=value[1], options=answers, type='quiz',
+                bot.send_poll(chat_id=message.chat.id, question=value[1], options=answers,
                               correct_option_id=value[5], explanation='мы молодцы', open_period=30)
                 test_id += 1
                 if test_id == 29:
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2f028b91-fee2-488b-b4f2-1dbcbc437b28\" name=\"Changes\" comment=\"add file\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/dataSources.local.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/dataSources.local.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/dataSources/35b85669-9436-41dd-a3cb-473ad6584b61.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/dataSources/35b85669-9436-41dd-a3cb-473ad6584b61.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/dataSources/91970a0f-318a-4d1b-a9ee-916f92a7b1a9.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/dataSources/91970a0f-318a-4d1b-a9ee-916f92a7b1a9.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/dataSources/a4633866-1b2b-4df0-8ce5-8ad726621fff.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/dataSources/a4633866-1b2b-4df0-8ce5-8ad726621fff.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_03_2023,_16_02_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_03_2023,_16_11_[Changes]1/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_03_2023__16_02__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_03_2023__16_10__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_03_2023__16_10__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_03_2023__16_11__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_03_2023__16_11__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_03_2023__16_11__Changes_1.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_03_2023,_14_33_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_03_2023,_17_03_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_03_2023,_17_47_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_03_2023__14_33__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_03_2023__17_03__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_03_2023__17_47__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23_03_2023,_15_31_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23_03_2023,_17_44_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23_03_2023,_23_04_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23_03_2023__15_31__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23_03_2023__17_44__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23_03_2023__23_04__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/vcs.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2NHGpO4C09R0GdzZ7ZnzPA4sBZ5\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"project-sales_bot\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Program Files\\Python311\\python.exe\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.11\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2f028b91-fee2-488b-b4f2-1dbcbc437b28\" name=\"Changes\" comment=\"\" />\r\n      <created>1679313775949</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1679313775949</updated>\r\n      <workItem from=\"1679313778301\" duration=\"125000\" />\r\n      <workItem from=\"1679313912623\" duration=\"204000\" />\r\n      <workItem from=\"1679316688088\" duration=\"942000\" />\r\n      <workItem from=\"1679581464301\" duration=\"56000\" />\r\n      <workItem from=\"1679581617170\" duration=\"2741000\" />\r\n      <workItem from=\"1679593367969\" duration=\"61000\" />\r\n      <workItem from=\"1679593436841\" duration=\"1734000\" />\r\n      <workItem from=\"1680303724988\" duration=\"288000\" />\r\n      <workItem from=\"1681026344498\" duration=\"32967000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"add file\">\r\n      <created>1679316945896</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679316945896</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"add file\">\r\n      <created>1679582474313</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679582474313</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"add file\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"add file\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/sss$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1679495123309\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/project_sales_bot$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1681233219918\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 4e42e67f718ead6ccb95cd7e9031bcaa676174db)
+++ b/.idea/workspace.xml	(date 1681299049473)
@@ -4,31 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="2f028b91-fee2-488b-b4f2-1dbcbc437b28" name="Changes" comment="add file">
-      <change beforePath="$PROJECT_DIR$/.idea/dataSources.local.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/dataSources/35b85669-9436-41dd-a3cb-473ad6584b61.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/35b85669-9436-41dd-a3cb-473ad6584b61.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/dataSources/91970a0f-318a-4d1b-a9ee-916f92a7b1a9.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/91970a0f-318a-4d1b-a9ee-916f92a7b1a9.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/dataSources/a4633866-1b2b-4df0-8ce5-8ad726621fff.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/a4633866-1b2b-4df0-8ce5-8ad726621fff.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_03_2023,_16_02_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_03_2023,_16_11_[Changes]1/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_03_2023__16_02__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_03_2023__16_10__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_03_2023__16_10__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_03_2023__16_11__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_03_2023__16_11__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_03_2023__16_11__Changes_1.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_03_2023,_14_33_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_03_2023,_17_03_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_03_2023,_17_47_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_03_2023__14_33__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_03_2023__17_03__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_03_2023__17_47__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23_03_2023,_15_31_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23_03_2023,_17_44_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23_03_2023,_23_04_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23_03_2023__15_31__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23_03_2023__17_44__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23_03_2023__23_04__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+    <list default="true" id="2f028b91-fee2-488b-b4f2-1dbcbc437b28" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
     </list>
@@ -106,7 +82,7 @@
       <workItem from="1679593367969" duration="61000" />
       <workItem from="1679593436841" duration="1734000" />
       <workItem from="1680303724988" duration="288000" />
-      <workItem from="1681026344498" duration="32967000" />
+      <workItem from="1681026344498" duration="35678000" />
     </task>
     <task id="LOCAL-00001" summary="add file">
       <created>1679316945896</created>
@@ -122,7 +98,14 @@
       <option name="project" value="LOCAL" />
       <updated>1679582474313</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="add file">
+      <created>1681233547521</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1681233547522</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -145,6 +128,6 @@
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/sss$main.coverage" NAME="main Coverage Results" MODIFIED="1679495123309" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-    <SUITE FILE_PATH="coverage/project_sales_bot$main.coverage" NAME="main Coverage Results" MODIFIED="1681233219918" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/project_sales_bot$main.coverage" NAME="main Coverage Results" MODIFIED="1681235401756" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
   </component>
 </project>
\ No newline at end of file
